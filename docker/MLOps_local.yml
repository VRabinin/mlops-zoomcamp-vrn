version: '3.8'

name: mlops-zoomcamp

services:
  postgres:
    hostname: ${POSTGRES_HOST:-postgres}
    image: postgres:13
    container_name: mlops-postgres
    environment:
      #POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_L_PORT:-5432}:5432"
    volumes:
      - type: bind
        source: ../db-data
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true
      - ./init_db.sh:/docker-entrypoint-initdb.d/inist_db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    container_name: mlops-mlflow
    hostname: mlflow
    ports:
      - "5005:5000"
    volumes:
      - ../mlflow_data:/mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
    command: >
      /bin/sh -c "pip install psycopg2-binary && mlflow server
      --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-postgres}/mlflow
      --default-artifact-root /mlflow/artifacts
      --host 0.0.0.0"
    restart: unless-stopped    
    depends_on:
      - postgres    

  dagster:
    #env_file:
    #  - .env.dev
    build:
      #context: .
      context: ./..
      dockerfile: docker/dagster.Dockerfile   
    container_name: mlops-dagster
    hostname: dagster   
    environment:
      DAGSTER_PG_HOST: ${POSTGRES_HOST:-postgres}      
      DAGSTER_PG_DB: ${DAGSTER_PG_DB}
      DAGSTER_PG_USERNAME: ${POSTGRES_USER}
      DAGSTER_PG_PASSWORD: ${POSTGRES_PASSWORD}   
      DAGSTER_PG_PORT: 5432
    ports:
      - "${DAGSTER_PORT:-3000}:3000"       
    depends_on:
      - postgres